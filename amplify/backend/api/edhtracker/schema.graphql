type User @model @auth(rules: [{allow: private}, {allow: public}]) {
  id: ID!
  displayName: String!
  description: String
  lightThemeColor: String
  darkThemeColor: String
  profilePictureURL: String
  role: String
  lastOnline: AWSDateTime
  decks: [Deck] @hasMany(indexName: "byUser", fields: ["id"])
}

type Deck @model @auth(rules: [{allow: private}]) {
  id: ID!
  deckOwnerId: ID! @index(name: "byUser")
  deckName: String!
  commanderName: String!
  commanderColors: [String!]
  deckType: String!
  link: String
  cost: Float
  winningMatches: [Match] @hasMany(indexName: "byWinningDeck", fields: ["id"])
  matchParticipants: [MatchParticipant] @hasMany(indexName: "byDeck", fields: ["id"])
}

type Match @model @auth(rules: [{allow: private}]) {
  id: ID!
  winningDeckId: ID! @index(name: "byWinningDeck")
  matchType: String!
  isArchived: Boolean!
  datePlayed: AWSDate!
  matchParticipants: [MatchParticipant] @hasMany(indexName: "byMatch", fields: ["id"])
}

type MatchParticipant @model @auth(rules: [{allow: private}]) {
  id: ID!
  deckId: ID! @index(name: "byDeck")
  matchId: ID! @index(name: "byMatch")
}